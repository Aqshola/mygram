basePath: /
definitions:
  dto.AddPhotoRequest:
    properties:
      caption:
        maxLength: 191
        type: string
      photo_url:
        maxLength: 191
        type: string
      title:
        maxLength: 191
        type: string
    required:
    - caption
    - photo_url
    - title
    type: object
  dto.AddPhotoResponse:
    properties:
      caption:
        type: string
      created_at:
        type: string
      id:
        type: integer
      photo_url:
        type: string
      title:
        type: string
      user_id:
        type: integer
    type: object
  dto.CreateCommentRequest:
    properties:
      message:
        maxLength: 191
        type: string
      photo_id:
        type: integer
    required:
    - message
    - photo_id
    type: object
  dto.CreateCommentResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      message:
        type: string
      photo_id:
        type: integer
    type: object
  dto.CreateSocialRequest:
    properties:
      name:
        maxLength: 191
        type: string
      social_media_url:
        maxLength: 191
        type: string
    required:
    - name
    - social_media_url
    type: object
  dto.CreateSocialResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      social_media_url:
        type: string
      user_id:
        type: integer
    type: object
  dto.DeleteCommentResponse:
    properties:
      message:
        type: string
    type: object
  dto.DeletePhotoResponse:
    properties:
      message:
        type: string
    type: object
  dto.DeleteSocialResponse:
    properties:
      message:
        type: string
    type: object
  dto.DeleteUserResponse:
    properties:
      message:
        type: string
    type: object
  dto.GetAllCommentResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      message:
        type: string
      photo:
        $ref: '#/definitions/dto.PhotoResponse'
      photo_id:
        type: integer
      updated_at:
        type: string
      user:
        $ref: '#/definitions/dto.UserResponse'
      user_id:
        type: integer
    type: object
  dto.GetAllPhotoResponse:
    properties:
      caption:
        type: string
      created_at:
        type: string
      id:
        type: integer
      photo_url:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/dto.UserResponse'
      user_id:
        type: integer
    type: object
  dto.GetAllSocialResponse:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      social_media_url:
        type: string
      user:
        $ref: '#/definitions/dto.UserResponse'
      user_id:
        type: integer
    type: object
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  dto.LoginResponse:
    properties:
      token:
        type: string
    type: object
  dto.PhotoResponse:
    properties:
      caption:
        type: string
      id:
        type: integer
      photo_url:
        type: string
      title:
        type: string
      user_id:
        type: integer
    type: object
  dto.RegisterRequest:
    properties:
      age:
        maximum: 100
        minimum: 8
        type: integer
      email:
        maxLength: 191
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 10
        type: string
    required:
    - age
    - email
    - password
    - username
    type: object
  dto.RegisterResponse:
    properties:
      age:
        type: integer
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  dto.UpdateCommentRequest:
    properties:
      message:
        maxLength: 191
        type: string
    required:
    - message
    type: object
  dto.UpdateCommentResponse:
    properties:
      id:
        type: integer
      message:
        type: string
      photo_id:
        type: integer
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  dto.UpdatePhotoRequest:
    properties:
      caption:
        maxLength: 191
        type: string
      photo_url:
        maxLength: 191
        type: string
      title:
        maxLength: 191
        type: string
    required:
    - caption
    - photo_url
    - title
    type: object
  dto.UpdatePhotoResponse:
    properties:
      caption:
        type: string
      id:
        type: integer
      photo_url:
        type: string
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  dto.UpdateRequest:
    properties:
      email:
        maxLength: 191
        type: string
      username:
        maxLength: 10
        type: string
    required:
    - email
    - username
    type: object
  dto.UpdateResponse:
    properties:
      age:
        type: integer
      email:
        type: string
      id:
        type: integer
      updated_at:
        type: string
      username:
        type: string
    type: object
  dto.UpdateSocialRequest:
    properties:
      name:
        maxLength: 191
        type: string
      social_media_url:
        maxLength: 191
        type: string
    required:
    - name
    - social_media_url
    type: object
  dto.UpdateSocialResponse:
    properties:
      id:
        type: integer
      name:
        type: string
      social_media_url:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  dto.UserResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
  helpers.ApiInfo:
    properties:
      message:
        type: string
      status:
        type: integer
    type: object
  helpers.ApiResponse:
    properties:
      data: {}
      info:
        $ref: '#/definitions/helpers.ApiInfo'
    type: object
host: localhost:8080
info:
  contact: {}
  title: MyGram Example API
  version: "1.0"
paths:
  /comments/:
    get:
      description: Get all comment
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.GetAllCommentResponse'
                  type: array
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      security:
      - Authorization: []
      summary: Get all comment
      tags:
      - Comment
    post:
      consumes:
      - application/json
      description: Create new comment
      parameters:
      - description: Create comment body
        in: body
        name: createCommentRequest
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCommentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.CreateCommentResponse'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      security:
      - Authorization: []
      summary: Create comment
      tags:
      - Comment
  /comments/{commentId}:
    delete:
      description: Delete comment
      parameters:
      - description: Comment Id
        in: path
        name: commentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.DeleteCommentResponse'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      security:
      - Authorization: []
      summary: Delete comment
      tags:
      - Comment
    put:
      consumes:
      - application/json
      description: Update comment
      parameters:
      - description: Update comment body
        in: body
        name: updateCommentRequest
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateCommentRequest'
      - description: Comment Id
        in: path
        name: commentId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.UpdateCommentResponse'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      security:
      - Authorization: []
      summary: Update comment
      tags:
      - Comment
  /photos/:
    get:
      description: Get All photo
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.GetAllPhotoResponse'
                  type: array
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      security:
      - Authorization: []
      summary: Get All Photo
      tags:
      - Photo
    post:
      consumes:
      - application/json
      description: Add new photo
      parameters:
      - description: Add photo body
        in: body
        name: addPhotoRequest
        required: true
        schema:
          $ref: '#/definitions/dto.AddPhotoRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.AddPhotoResponse'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      security:
      - Authorization: []
      summary: Add new photo
      tags:
      - Photo
  /photos/{photoId}:
    delete:
      description: Delete photo
      parameters:
      - description: Photo Id
        in: path
        name: photoId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.DeletePhotoResponse'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      security:
      - Authorization: []
      summary: Delete photo
      tags:
      - Photo
    put:
      consumes:
      - application/json
      description: Update Photo
      parameters:
      - description: Update photo body
        in: body
        name: updatePhotoRequest
        required: true
        schema:
          $ref: '#/definitions/dto.UpdatePhotoRequest'
      - description: Photo Id
        in: path
        name: photoId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.UpdatePhotoResponse'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      security:
      - Authorization: []
      summary: Update Photo
      tags:
      - Photo
  /socialmedias/:
    get:
      description: Get all social
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.GetAllSocialResponse'
                  type: array
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      security:
      - Authorization: []
      summary: Get all social
      tags:
      - Social
    post:
      consumes:
      - application/json
      description: Create new social
      parameters:
      - description: Create social body
        in: body
        name: createSocialRequest
        required: true
        schema:
          $ref: '#/definitions/dto.CreateSocialRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.CreateSocialResponse'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      security:
      - Authorization: []
      summary: Create social
      tags:
      - Social
  /socialmedias/{socialMediaId}:
    delete:
      description: Delete social
      parameters:
      - description: Social media Id
        in: path
        name: socialMediaId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.DeleteSocialResponse'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      security:
      - Authorization: []
      summary: Delete social
      tags:
      - Social
    put:
      consumes:
      - application/json
      description: Update social
      parameters:
      - description: Update social body
        in: body
        name: updateSocialRequest
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateSocialRequest'
      - description: Social media Id
        in: path
        name: socialMediaId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.UpdateSocialResponse'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      security:
      - Authorization: []
      summary: Update social
      tags:
      - Social
  /users/:
    delete:
      consumes:
      - application/json
      description: Delete User
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.DeleteUserResponse'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      security:
      - Authorization: []
      summary: Delete User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update User Data
      parameters:
      - description: Login body
        in: body
        name: registerRequest
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.UpdateResponse'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      security:
      - Authorization: []
      summary: Update User
      tags:
      - User
  /users/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: Login body
        in: body
        name: registerRequest
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.LoginResponse'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      summary: Login
      tags:
      - User
  /users/register:
    post:
      consumes:
      - application/json
      description: Register new user
      parameters:
      - description: Register body
        in: body
        name: registerRequest
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/helpers.ApiResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.RegisterResponse'
              type: object
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/helpers.ApiResponse'
      summary: Register User
      tags:
      - User
securityDefinitions:
  Authorization:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
